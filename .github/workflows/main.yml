name: Main - CI

on:
  push:
    branches: [ master ]
    
  pull_request:
    branches: [ master ]

env:
  MIX_ENV: test

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    matrix:
      elixir: [1.10.3]
      otp: [22.3]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]
        
      - name: Restore dependencies cache
        uses: actions/cache@v2
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Compile code
        run: mix compile --warnings-as-errors
  
  quality:
    name: Format and Consistence
    runs-on: ubuntu-latest
    needs: build

    matrix:
      elixir: [1.10.3]
      otp: [22.3]
      
    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]

      - name: Restore dependencies cache
        uses: actions/cache@v2
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Run Format
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    
    matrix:
      elixir: [1.10.3]
      otp: [22.3]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]

      - name: Restore dependencies cache
        uses: actions/cache@v2
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: _build/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Generate PLT
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p _build/plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --no-check --halt-exit-status
  
      - name: Run tests
        run: mix coveralls.github
